
El proyecto se divide en cinco carpetas, respetando el desarrollo de API en SpringBoot
API:
- auth: Tiene la configuracion de seguridad web (SpringSecurity).
- controller: El controlador API para obtener los precios.
- Dto: A donde van los datos despues de ser mapeados por el controlador.
- exceptions: Todas las excepciones que se puedan dar en la API a nivel de Configuracion.
- mapping: Permite mapear los datos entre la entidad PriceProduct y el Dto PriceDto.
BOOT:
-Carpeta para el lanzamiento de la aplicacion en Spring, y las configuraciones que conlleva (Carga de Datos de prueba, mapeo de repositorios)
DOMAIN:
-Carpeta que contiene las entidades y casos de Uso aplicados para realizar las pruebas del APIREST.
EXCEPTIONS:
-Maneja el conjunto de excepciones del proyecto, exceptuando aquellas mapeadas en el modulo de API.
PERSISTENCE- REPOSITORIES:
- Implementa el repositorio de CustomPriceProductRepository para interactuar con la BBDD y recuperar los detalles de la tabla Prices.
Adicionalmente se manejan instancias de entityManager para crear y eliminar instancias persistentes de la base de datos.



Tambien se crean test de Integracion para evaluar cada caso en concreto:


La creacion de este servicio se encuentra expuesta en el siguiente link:

 http://localhost:9002/swagger-ui/index.html#/price-controller/getProductPrice

 Por favor tener en cuenta lo siguiente:

Para ejecutar la app basta con enviar el comando desde el repositorio git clonado (carpeta padre)
-- mvn spring-boot:run

Para ejecutar los tests:
-- mvn clean test
